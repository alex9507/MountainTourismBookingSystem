@using Microsoft.AspNetCore.Identity
@using Microsoft.Extensions.Options

@inject SignInManager<ApplicationUser> SignInManager
@inject IOptions<MountainTourismBookingSystem.Data.StripeSettings> Stripe
@{
    ViewData["Title"] = "Календар за Резервации";
}
@model ChaletModel;
@{ Guid dataGuid = Guid.NewGuid(); ;}

@if (SignInManager.IsSignedIn(User))
{
    <BR>
    <BR>
    <BR>
    <BR>

    <div style="background-color:whitesmoke">
        <div id="calendar"></div>
    </div>

    <div id="msgInfo" class="isa_info" style="display: none;">
        <i class="fa fa-info-circle"></i>
        <strong>Информация!</strong>
        <strong id="msgInfoText"></strong>
    </div>
    <div id="msgSuccess" class="isa_success" style="display: none;">
        <i class="fa fa-check"></i>
        <strong>Успех!</strong>
        <strong id="msgSuccessText"></strong>
    </div>
    <div id="msgWarn" class="isa_warning" style="display: none;">
        <i class="fa fa-warning"></i>
        <strong>Предупреждение!</strong>
        <strong id="msgWarnText"></strong>
    </div>
    <div id="msgError" class="isa_error" style="display: none;">
        <i class="fa fa-times-circle"></i>
        <strong>Грешка!</strong>
        <strong id="msgErrorText"></strong>
    </div>

    <div id="myModel" class="modal fade" role="dialog" style="top: 10%;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"><span id="reservationChaletName"></span></h4>
                </div>
                <div class="modal-body">
                    <button id="btnDelete" class="btn btn-danger btn-sm pull-right">
                        <span class="glyphicon glyphicon-remove"></span> Отказване
                    </button>
                    <p id="pDetails"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Затваряне</button>
                </div>
            </div>
        </div>
    </div>

    <div id="modelReserve" class="modal fade" role="dialog" style="top: 10%;" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Запазване на Обект за дати: </h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>Брой хора</label>
                        <input type="number" id="txtPeopleCount" class="form-control" oninput="this.value = this.value.replace(/[^0-9]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1'); calculateAmount();" />
                    </div>
                    <div class="form-group">
                        <label>Сума</label>
                        <input type="number" id="txtAmount" class="form-control" oninput="this.value = this.value.replace(/[^0-9]/g, ''); this.value = this.value.replace(/(\..*)\./g, '$1')" disabled />
                    </div>
                    <div class="form-group">
                        <label>Валута</label>
                        <input type="text" id="txtCurrency" class="form-control" maxlength="3" value="BGN" disabled />
                    </div>
                    <div class="form-group">
                        <label>Начална дата</label>
                        <div class="input-group date" id="dpFrom">
                            <input type="text" id="txtStart" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label><input type="checkbox" id="chIsFullDay" checked="checked" />Резервация за един ден</label>
                        </div>
                    </div>
                    <div class="form-group" id="divToDate" style="display:none">
                        <label>Крайна дата</label>
                        <div class="input-group date" id="dpTo">
                            <input type="text" id="txtEnd" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Цвят на темата</label>
                        <select id="divColor" class="form-control">
                            <option value="green">Зелен</option>
                            <option value="red">Червен</option>
                            <option value="blue">Син</option>
                            <option value="purple">Лилав</option>
                        </select>
                    </div>

                    <div class="floated">
                        <form asp-action='Charge' asp-controller='Payment' asp-route-id='@Model.unique_id' asp-route-dataGuid="@dataGuid" method='POST' id="modelPay" onclick="postDataSave()">
                        </form>
                    </div>

                    <button value="submit" id="paypal-button" class="modal-content" onclick="postDataSave()"> </button>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Затвори</button>
                </div>
            </div>
        </div>
    </div>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.1/fullcalendar.min.css" rel="stylesheet" type="text/css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.1/fullcalendar.print.min.css" rel="stylesheet" type="text/css" media="print" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />

    @section Scripts {
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.1/fullcalendar.min.js"></script>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.1/gcal.js"></script>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.1/locale/bg.js"></script>
        <script type="text/javascript" src="https://www.paypalobjects.com/api/checkout.js"></script>

        <script>
        $(document).ready(function () {
            var reservations = [];
            var selectedReservation = null;
            FetchReservationsAndRenderCalendar();

            function FetchReservationsAndRenderCalendar() {
                reservations = [];
                $.ajax({
                    type: "GET",
                    url: "/Reservation/GetReservations",
                    data: { "unique_id" : '@Model.unique_id'},
                    success: function (data) {
                        $.each(data, function (i, v) {
                            reservations.push({
                                reservation_id: v.reservation_id,
                                dt: v.dt,
                                title: v.chalet_name,
                                start: v.dt_from != null ? moment(v.dt_from) : null,
                                end: v.dt_to != null ? moment(v.dt_to) : null,
                                status: v.status,
                                amount: v.amount,
                                people_count: v.people_count,
                                currency: v.currency,
                                color: v.color,
                                is_full_day: v.is_full_day
                            })
                        })

                        GenerateCalendar(reservations);
                    },
                    error: function (error) {
                        $('#msgErrorText').empty().append("Има проблем при зареждането на информацията.");
                        $('#msgError').fadeIn(800).delay(3000).fadeOut(800);
                    }
                })
            }
            // End of function FetchReservationsAndRenderCalendar() {

            function GenerateCalendar(reservations) {
                $('#calendar').fullCalendar("destroy");
                $('#calendar').fullCalendar({
                    contentHeight: 650,
                    defaultDate: new Date(),
                    themeSystem: 'bootstrap3',
                    timeFormat: 'h(:mm)',
                    firstDay: 1,
                    businessHours: true,
                    navLinks: true,
                    customButtons: {
                        myPrintButton: {
                            text: ' принтирай',
                            click: function () {
                                window.print();
                            }
                        }
                    },
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,basicWeek,basicDay, agenda myPrintButton'
                    },
                    footer: {
                        left: 'prevYear',
                        right: 'nextYear'
                    },
                    eventLimit: true,
                    eventColor: '#378006',
                    googleCalendarApiKey: 'AIzaSyD3sFl3f55EC4pS2eGvIj8Hx41GlGbeBLI',
                    eventSources: [
                        reservations,
                        {
                            googleCalendarId: 'en.bulgarian#holiday@group.v.calendar.google.com',
                            className: 'gcalevent',
                            color: 'brown',
                            'googleCalendar': 'true'
                        }
                    ],
                    weekNumbers: true,
                    eventClick: function (calTask, jsEvent, view) {
                        selectedReservation = calTask;

                        if (jsEvent.currentTarget.href) {
                            window.open(jsEvent.currentTarget.href, 'newwindow', 'width=800,height=700');
                            return false;
                        }

                        $('#myModel #reservationChaletName').text(calTask.title);

                        var $description = $('<div/>');
                        $description.append($('<p/>').html('<b>Платена сума: </b>' + calTask.amount ));
                        $description.append($('<p/>').html('<b>Валута: </b>' + calTask.currency));
                        $description.append($('<p/>').html('<b>Брой хора: </b>' + calTask.people_count));
                        $description.append($('<p/>').html('<b>Начална дата: </b>' + calTask.start.format("YYYY-MMM-DD")));
                        if (calTask.end != null) {
                            $description.append($('<p/>').html('<b>Крайна дата: </b>' + calTask.end.format("YYYY-MMM-DD")));
                        }
                        else {
                            $description.append($('<p/>').html('<b>Само за един ден. </b>'));
                        }

                        $('#myModel #pDetails').empty().html($description);
                        $('#myModel').modal();
                    },
                    selectable: true,
                    select: function (start, end) {
                        selectedReservation = {
                            reservation_id: 0,
                            title: '',
                            start: start,
                            end: end,
                            status: '',
                            amount: 0,
                            currency: '',
                            people_count: 0,
                            color: 'green',
                            is_full_day: false
                        };

                        openReservationForm(selectedReservation);
                        $('#calendar').fullCalendar('unselect');
                    },
                    editable: true,
                    eventDrop: function (event) {
                        var data = {
                            reservation_id: event.reservation_id,
                            dt_from: event.start.format('YYYY-MM-DD'),
                            dt_to: event.end != null ? event.end.format('YYYY-MM-DD') : null,
                            is_full_day: event.is_full_day
                        };

                        changeData(data)
                    }
                })
            }
            // End of function GenerateCalendar(reservations) {

            var CREATE_PAYMENT_URL = 'https://localhost:44385/Payment/CreatePayment';
            var EXECUTE_PAYMENT_URL = 'https://localhost:44385/Payment/ExecutePayment';
            paypal.Button.render({
                env: 'sandbox', //'production',
                commit: true,
                payment: function () {
                    return paypal.request.post(CREATE_PAYMENT_URL, {id: '@Model.unique_id',dataGuid: '@dataGuid'}).then(function (data) {
                        return data.id;
                    });
                },
                onAuthorize: function (data) {
                    return paypal.request.post(EXECUTE_PAYMENT_URL, {
                        paymentID: data.paymentID,
                        payerID: data.payerID,
                        id: '@Model.unique_id',
                        dataGuid: '@dataGuid'
                    }).then(function () {
                        window.location.href = 'https://localhost:44385/Payment/Success'
                    });
                }
            }, '#paypal-button');
            // End of paypal.Button.render({

            $('#dpFrom,#dpTo').datetimepicker({
                format: 'YYYY-MM-DD',
            });
            // End of $('#dpFrom,#dpTo').datetimepicker({

            $("#dpFrom,#dpTo").on("dp.change", function (e) {
                calculateAmount();
            });

            $('#chIsFullDay').change(function () {
                if ($(this).is(':checked')) {
                     calculateAmount();
                    $('#divToDate').hide();
                   }
                else {
                     calculateAmount();
                    $('#divToDate').show();
                }
            });
            // End of $('#chIsFullDay').change(function () {
        })
        // End of $(document).ready(function () {

        function openReservationForm(selectedReservation) {
            if (selectedReservation != null) {
                $('#txtPeopleCount').val(selectedReservation.people_count);
                $('#txtStart').val(selectedReservation.start.format('YYYY-MM-DD'));
                $('#chIsFullDay').prop("checked", selectedReservation.is_full_day || false);
                $('#chIsFullDay').change();
                $('#txtEnd').val(selectedReservation.end != null ? selectedReservation.end.format('YYYY-MM-DD') : '');
                $('#ddThemeColor').val(selectedReservation.color);
            }
            $('#myModel').modal('hide');
            $('#modelReserve').modal();
        }
        // End of function openReservationForm() {

        $('#txtStart, #txtEnd').change(function() {
            calculateAmount();
        });
        // End of $('#txtStart, #txtEnd').change(function() {

        function calculateAmount() {
            const _MS_PER_DAY = 1000 * 60 * 60 * 24;

            var formatStartDate = new Date($('#txtStart').val()).toLocaleDateString("en-US").trim();
            var formatEndDate = new Date($('#txtEnd').val()).toLocaleDateString("en-US").trim();

            var startDate = new Date(formatStartDate);
            var endDate = new Date(formatEndDate);

            if (startDate > endDate) {
                $('#msgInfoText').empty().append("Невалидна Крайна дата.");
                $('#msgInfo').fadeIn(800).delay(3000).fadeOut(800);
                return;
            }

            if ($("#chIsFullDay").is(':checked')) {
                $('#txtAmount').val($('#txtPeopleCount').val() * @Model.price);
            }
            else
            {
                var timeDiff = Math.abs(endDate - startDate);
                var diffDays = Math.ceil(timeDiff / _MS_PER_DAY);
                $('#txtAmount').val($('#txtPeopleCount').val() * @Model.price * diffDays);
            }
            generateStripeModel();
        }
        // End of function calculateAmount() {

        function generateStripeModel() {
            var generate_stripe = "";
            if ($('#txtAmount').val() != "" && $('#txtAmount').val() != "0"
                && $('#txtPeopleCount').val() != "") {
                generate_stripe =
                    "       <script src='https://checkout.stripe.com/v2/checkout.js' class='stripe-button' "
                    + "           data-key='@Stripe.Value.PublishableKey' "
                    + "           data-amount='" + $('#txtAmount').val() * 100 + "' "
                    + "           data-name='Резервационна система за планински туризъм' "
                    + "           data-description='Хижа @Model.name за цена: " + $('#txtAmount').val() + " лева' "
                    + "           data-image='https://stripe.com/img/documentation/checkout/marketplace.png' "
                    + "           data-locale='auto' "
                    + "           data-billing-address='true' "
                    + "           data-zip-code='true'"
                    + "           data-label='Плащане с карта'> "
                    + "       </" + "script> ";
            }

            $("#modelPay").html(generate_stripe);
        }
        // End of function generateStripeModel() {

        function postDataSave() {
            var data = {
                chalet_id: @Model.chalet_id,
                unique_id: '@dataGuid',
                dt_from: $('#txtStart').val(),
                dt_to: $('#chIsFullDay').is(':checked') ? null : $('#txtEnd').val(),
                is_full_day: $('#chIsFullDay').is(':checked'),
                amount: $('#txtAmount').val(),
                currency: $('#txtCurrency').val(),
                people_count: $('#txtPeopleCount').val(),
                color: $('#divColor').val()
            }

            $.ajax({
                    type: "POST",
                    url: "/Payment/SaveData",
                    data: data,
                    error: function () {
                        $('#msgErrorText').empty().append("Има проблем при запазването на информацията за плащането.");
                        $('#msgError').fadeIn(800).delay(3000).fadeOut(800);
                    }
                })
        }
        // End of function postDataSave() {

        function changeData(data) {
            $.ajax({
                    type: "POST",
                    url: "/Payment/ChangeData",
                    data: data,
                    error: function () {
                        $('#msgErrorText').empty().append("Има проблем при запазването на информацията за плащането.");
                        $('#msgError').fadeIn(800).delay(3000).fadeOut(800);
                    }
                })
        }
        // End of function changeData(data) {

        $('#btnDelete').click(function () {
            if (selectedTask != null && confirm('Сигурни ли сте, че искате да изтриете това задание ?')) {
                DeleteTask();
            }
        })
        // End of $('#btnDelete').click(function () {

        function DeleteTask() {
            $.ajax({
                type: "POST",
                url: "/Reservation/Delete",
                data: { 'id': selectedReservation.reservation_id },
                success: function (data) {
                    if (data.status) {
                        FetchReservationsAndRenderCalendar(); // Refreshing the calendar.
                        $('#myModel').modal('hide');
                        $('#msgSuccess').fadeIn(800).delay(3000).fadeOut(800);
                    }
                },
                error: function () {
                    $('#msgErrorText').empty().append("Има проблем при отказването на тази резервация.");
                    $('#msgError').fadeIn(800).delay(3000).fadeOut(800);
                }
            })
        }
        // End of function DeleteTask() {

        </script>
    }
}